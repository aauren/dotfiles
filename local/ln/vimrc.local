" Change text width to 120 which is a more sensible default
set textwidth=120

" Remap jj in quick succession to escape
:imap jj <Esc>

" Remap next and previous tab to Ctrl-PgDn and Ctrl-PgUp
:map <Esc>h :tabp<CR>
:map <Esc>l :tabn<CR>

" Change the default action of enter to within CTRL-p to open in a tab instead of switching the buffer
let g:ctrlp_prompt_mappings = {
    \ 'AcceptSelection("e")': ['<c-t>'],
    \ 'AcceptSelection("h")': ['<c-x>', '<c-cr>', '<c-s>'],
    \ 'AcceptSelection("t")': ['<cr>', '<2-LeftMouse>'],
    \ 'AcceptSelection("v")': ['<c-v>', '<RightMouse>'],
    \ }

" Color scheme
if filereadable(expand("~/.vimrc.bundles"))
  set background=dark
  colorscheme solarized
  "highlight NonText guibg=#060606
  "highlight Folded  guibg=#0A0A0A guifg=#9090D0
endif

" Allow saving of files as sudo when I forgot to start vim using sudo
cmap w!! w !sudo tee > /dev/null %

" --- Grouping autocmd's here so that we don't accidently dup them later on ---
augroup filetypes
  " Setting a different indentation for Python so that we get more than 80 characters in a column
  autocmd Filetype python set textwidth=120

  " Set different indent styles for different file types
  au Filetype python setlocal et ts=4 sw=4 sts=4 nowrap
  au Filetype sh setlocal ts=4 sw=4 sts=4 noexpandtab nowrap
  au Filetype ebuild setlocal ts=4 sw=4 sts=4 noexpandtab nowrap

  " Set file type to upconf template when it has deploy/config in the path
  autocmd BufRead,BufNewFile */deploy/config/* set filetype=upconf-template
  autocmd Filetype json let b:indentLine_ConcealOptionSet = 1
augroup END

" Set tab merge alias to vertically split current tab and the tab to the right (or barring that, to the left)
" To put them back to tabs afterward, type CTRL+w, SHIFT+t
:map <C-t> <esc>:Tabmerge right<CR>

" The following pattern will match trailing whitespace, except when typing at the end of a line.
:highlight ExtraWhitespace ctermbg=red guibg=red

augroup whitespace
  :autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red

  " If you use this alternate pattern, you may want to consider using the following autocmd to let the highlighting show
  " up as soon as you leave insert mode after entering trailing whitespace:
  " :autocmd InsertLeave * redraw!
  :au InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
  :au InsertLeave * match ExtraWhitespace /\s\+$/
augroup END

:match ExtraWhitespace /\s\+\%#\@<!$/

" Various leader mappings for setting things like paste-mode and list mode
map <Leader>p :set paste!<CR>
map <Leader>l :set list!<CR>
map <Leader>n :set number!<CR>
" Close the quickfix window (for things like pylint)
map <Leader>c :lclose<CR>

" Shows leading space using the indentLine plugin from Yggdroot
let g:indentLine_leadingSpaceEnabled = 1
let g:indentLine_enabled = 0

" Add ignores for annoying pep8 guidelines
let g:pep8_ignore="E501"
let g:pymode_lint_ignore="E501"

" Add control based navigation to insert mode
:map <C-G> <C-Right>
:map! <C-G> <C-Right>
:map <C-F> <C-Left>
:map! <C-F> <C-Left>
:map <C-J> ^
:inoremap <C-J> <C-o>^
:map <C-K> $
:inoremap <C-K> <C-o>$
