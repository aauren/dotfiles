if [[ $(uname -a) == *"Darwin"* ]]; then
	SED_OPTS='-E'
else
	SED_OPTS='-r'
fi

# Command to start up ssh-agen if there is an SSH key in your profile
if [[ -z ${SSH_AUTH_SOCK} && -z $(pgrep ssh-agent) ]]; then
	eval $(ssh-agent)
fi

# Add any missing SSH identities
SSH_ADD=$(ssh-add -l)
for file in $(ls ${HOME}/.ssh/id*.pub 2> /dev/null); do
	identity=$(echo ${file} | sed ${SED_OPTS} 's/.*(\.ssh.*).pub/\1/g')
	if [[ $SSH_ADD != *${identity}* ]]; then
		echo "Identity didn't exist, adding: ${identity}"
		ssh-add ${identity}
	fi
done

# Changes prompt to include information about Git repos and what zvim mode we're in
source "${HOME}/dotfiles/local/lib/git_prompt/git_prompt.sh"
local vi_normal_marker="[%{$fg[magenta]%}N%{$reset_color%}]"
local vi_insert_marker="[%{$fg[cyan]%}I%{$reset_color%}]"
local vi_unknown_marker="[%{$fg[red]%}U%{$reset_color%}]"
local vi_mode="$vi_insert_marker"
vi_mode_indicator () {
case ${KEYMAP} in
	(vicmd)      echo $vi_normal_marker ;;
	(main|viins) echo $vi_insert_marker ;;
	(*)          echo $vi_unknown_marker ;;
esac
}

# Reset mode-marker and prompt whenever the keymap changes
function zle-line-init zle-keymap-select {
	vi_mode="$(vi_mode_indicator)"
	zle reset-prompt
}
zle -N zle-line-init
zle -N zle-keymap-select

export PROMPT='${SSH_CONNECTION+"%{$fg_bold[green]%}%n@%m:"}%{$fg_bold[blue]%}%~%{$reset_color%} $(git_super_status)
%(?.%{$fg[green]%}[0].%{$fg[red]%}[%?])%{$reset_color%}${vi_mode}%# '

# Binds keys appropriately so that special keys like Home, End, and Delete work
# These maps can be created by running "sed -n l" and then typing the HOME, END, INSERT, and DELETE keys
# once you get the output, add it to a new map, then you can either manually or automatically source it.
#source "${HOME}/.keys/00-map"

# create a zkbd compatible hash;
# to add other keys to this hash, see: man 5 terminfo
typeset -A key

key[Home]=${terminfo[khome]}
key[End]=${terminfo[kend]}
key[Insert]=${terminfo[kich1]}
key[Delete]=${terminfo[kdch1]}
key[Up]=${terminfo[kcuu1]}
key[Down]=${terminfo[kcud1]}
key[Left]=${terminfo[kcub1]}
key[Right]=${terminfo[kcuf1]}
key[PageUp]=${terminfo[kpp]}
key[PageDown]=${terminfo[knp]}

# setup key accordingly
[[ -n "${key[Home]}"    ]]  && bindkey  "${key[Home]}"    beginning-of-line
[[ -n "${key[End]}"     ]]  && bindkey  "${key[End]}"     end-of-line
[[ -n "${key[Insert]}"  ]]  && bindkey  "${key[Insert]}"  overwrite-mode
[[ -n "${key[Delete]}"  ]]  && bindkey  "${key[Delete]}"  delete-char
[[ -n "${key[Up]}"      ]]  && bindkey  "${key[Up]}"      up-line-or-history
[[ -n "${key[Down]}"    ]]  && bindkey  "${key[Down]}"    down-line-or-history
[[ -n "${key[Left]}"    ]]  && bindkey  "${key[Left]}"    backward-char
[[ -n "${key[Right]}"   ]]  && bindkey  "${key[Right]}"   forward-char

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
function zle-line-init () {
	echoti smkx
}
function zle-line-finish () {
	echoti rmkx
}
zle -N zle-line-init
zle -N zle-line-finish

# Add local bin file
if [[ -e ${HOME}/bin ]]; then
	export PATH=${HOME}/bin:${PATH}
fi

# Switch to incremental pattern search, plus ability to go forward and backward
bindkey -M viins '^R' history-incremental-pattern-search-backward
bindkey -M vicmd '/' history-incremental-pattern-search-backward
bindkey -M isearch '^R' history-incremental-search-backward
bindkey -M isearch '^F' history-incremental-search-forward

# Shared command history
#setopt inc_append_history # Not needed because it's already in the parent zshrc, but leaving here for completeness
setopt share_history

# re-sets yank and kill shortcuts to bash/emacs mode
bindkey -M viins '^P' push-line-or-edit
bindkey -M viins '^Y' yank
bindkey -M viins '\ey' yank-pop
bindkey -M viins '^U' backward-kill-line

# sets ctrl+b and ctrl+f to forward and backword by word
bindkey -M viins '^G' forward-word
bindkey -M viins '^F' backward-word
bindkey -M viins '^J' vi-beginning-of-line
bindkey -M viins '^K' vi-end-of-line

tmux_info() {
	local tmux_var="${1}"
	tmux display -pt "${TMUX_PANE:?}" "#{${tmux_var}}"
}

gitcm () {
	((sleep 0.1 && tmux send-keys -t "$(tmux_info session_name):$(tmux_info window_name).$(tmux_info pane_index)" "$(echo "git cm \"$(git diff --name-only --cached | grep -o '[^/]*$' | sed ':a;N;$!ba;s/\n/ \& /g'): ")") &)
}

# Adds z (directory hopper) to the command line
source "${HOME}/dotfiles/local/lib/rupa-z/z.sh"

# Add additional zsh functions
if [[ -e "${HOME}/.zshrc.user.local" ]]; then
	source "${HOME}/.zshrc.user.local"
fi

# vim: set noet ts=4 sw=4
