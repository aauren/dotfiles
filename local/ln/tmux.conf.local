# Change prefix key to CTRL+a instead of CTRL+b
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Reduce default Tmux delay (by default there is a small delay when sending
# commands)
set -s escape-time 1

# Change repeat timeout to something more than the default 500ms
set -g repeat-time 500

# Disallow renaming of window titles
set -g allow-rename off

# Increase size of history buffer to 20,000 lines (previous dotfiles have it at 10,000)
set -g history-limit 20000

# Stop various environment settings from being overwritten by remote clients
# The initial (local) environment should always be set from the global (first) creation, this only affects:
# switch and attach operations, which is basically the equivalent of always specifying "-E" with each of theses commands
set -g update-environment ""

# Prefix+a causes us to return to previous window
bind C-a last-window

bind a switch-client -l

# Choose session
bind s choose-tree -sw

# Find window by title in current session
bind f command-prompt -p "window:" "set -F @sess '#{session_name}'; choose-tree -Nwf '#{&&:#{==:#{session_name},#{@sess}},#{m:*%%*,#{window_name}}}'"

# Find window by title in all sessions
bind C-f command-prompt -p "window:" "choose-tree -Nwf '#{m:*%%*,#{window_name}}'"

# Choose a window from a list in the current session
bind w set -F @sess '#{session_name}'\; choose-tree -Nwf '#{==:#{session_name},#{@sess}}'

# Go to a specific window by name
bind g command-prompt -p "window:" "run-shell \"~/bin/tmux_goto_window window '#{session_id}' '%%'\""

# Go to a specific window by content
bind C-g command-prompt -p "window:" "run-shell \"~/bin/tmux_goto_window content '#{session_id}' '%%'\""

# Create a new window in insert mode
bind C-c new-window -a

# Go to the next window that has activity
bind C-n next-window -a

# Clear activity marker on all windows
bind C-k kill-session -C

# Vertically expand pane to consume the entire window height
bind \; run-shell 'tmux resizep -y #{window_height}'

# Vertically collapse pane to consume 50% of entire window height
bind / run-shell 'tmux resizep -y $(( #{window_height} / 2 ))'

# Output a sleep command to the window with the set delay based upon pane number
bind C-d command-prompt -p "Delay:" "run-shell -b \"tmux_delay #{session_name} #{window_name} #{?pane_synchronized,yes,no} %%\""

# Output the numerical number of the pane's position within the window
bind C-n run-shell -b "tmux_output_pane_number #{session_name} #{window_name} #{?pane_synchronized,yes,no}"

# Create a tmux window based on machine a name with automation scripts
bind C-w command-prompt -p "Window:" "run-shell -b \"create_tmux #{session_name} %% >/dev/null\""

# Root bindings
# Zoom window when insert key is pressed (bind to root table so that you don't have to press the tmux modifier)
bind -n IC resize-pane -Z\; if-shell -F "#{window_zoomed_flag}" "set-window-option synchronize-panes off" "set-window-option synchronize-panes on"
bind z resize-pane -Z\; if-shell -F "#{window_zoomed_flag}" "set-window-option synchronize-panes off" "set-window-option synchronize-panes on"

# Show session selection tree when CTRL-Delete is pressed
bind -n C-DC choose-tree -sw

# Go into paste mode when CTRL-Space is pressed
bind -n C-Space if-shell -F "#{alternate_on}" "send-keys C-Space" "copy-mode"

# Allow for pane navigation with CTRL-Arrow keys
bind -n C-Up select-pane -U
bind -n C-Right select-pane -R
bind -n C-Down select-pane -D
bind -n C-Left select-pane -L

# Use PageUp to scroll up in the tmux copy buffer, unless we're in an alternate screen application like tmux or vim,
# in which case you should just send them the PageUp key
bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -eu"

# Allows you to freeze or unfreeze input to a pane by pressing CTRL-Tab
bind-key -T root F2 if-shell -F "#{pane_input_off}" "selectp -e" "selectp -d"
bind-key -T root C-F2 if-shell -F "#{pane_input_off}" "selectp -e" "selectp -d"

# Prefix+r causes reload of Tmux settings
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Send command to all panes
bind C-e command-prompt -p "session?,message?" "run-shell \"tmux list-windows -t %1 \| cut -d: -f1\|xargs -I\{\} tmux send-keys -t %1:\{\} %2\""

# Double pressing Prefix+a will send CTRL+a to application below Tmux
#bind -r C-a send-prefix

# Change split panes to - and | for a horizontal or veritcal split
bind | split-window -h
bind - split-window -v

# Remap pane navigation to vim movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Remap window navigation to CTRL + vim left/right movement keys
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Remap pane resizing to SHIFT + vim movement keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Pane movement commands
bind @ command-prompt -p "create pane from:"  "join-pane -hs ':%%'"
#bind -n F1 break-pane
#bind -n F2 command-prompt -p "create pane from:"  "join-pane -hs ':%%'"
#bind -n F3 select-layout tiled

# Swap window numbers
bind C-s command-prompt -p "first window to swap:","second window to swap" "swap-window -s %% -t %%"

# Bind key for synchronizing panes
bind C-y set-window-option synchronize-panes

# Change copy/paste with layout mappings
bind Tab next-layout
bind Space copy-mode

# Unbind arrow key movement in favor of VIM style movement
unbind Left
unbind Down
unbind Up
unbind Right

#### Copy and paste buffer settings ####
# Set buffer navigation to use vim style motion keys
setw -g mode-keys vi
# Add key mapping for showing the copy paste buffer
bind P choose-buffer
unbind p
bind p paste-buffer
bind + command-prompt -p "save current paste buffer to:" -I "~/tmux_paste_buffer" "save-buffer %1;"
bind _ command-prompt -p 'save history to:' -I '~/tmux.log' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi C-f send-keys -X previous-word
bind -T copy-mode-vi C-g send-keys -X next-word
bind -T copy-mode-vi C-j send-keys -X start-of-line
bind -T copy-mode-vi C-k send-keys -X end-of-line

bind v select-pane -L \; copy-mode \; select-pane -L \; copy-mode \; select-pane -L
bind V select-pane -L \; send-keys 'q' \; select-pane -L \; send-keys 'q' \; select-pane -L

##### Setup Mouse Commands ####
#setw -g mode-mouse on
## Allows to select pane by clicking into it
#set -g mouse-select-pane on
## Allows to resize pane by dragging pane border
#set -g mouse-resize-pane on
## Allows to select window by clicking on it
#set -g mouse-select-window on

#### Change Colors of Status Bars ####
# Set status bar to white text on black background
set -g status-fg white
set -g status-bg black
# Set active window to red while inactive become cyan
setw -g window-status-fg cyan
setw -g window-status-bg black
setw -g window-status-attr dim
setw -g window-status-current-fg colour12
setw -g window-status-current-bg default
setw -g window-status-current-attr bright
# Customize the command line for Tmux
set -g message-fg white
set -g message-bg black
set -g message-attr bright
# Set status bar across the bottom
#set -g status-utf8 on
set -g status-interval 5
# Center align window list
set -g status-justify centre
# Add visual notifications when something happens in a window
setw -g monitor-activity on
set -g visual-activity on
# Now on to the actual content of the status bar
set -g status-left-length 22
set -g status-left "#[fg=colour124,bold][#{session_name}] #[fg=colour12,bright]#(TZ=UTC date -u '+%%d %%H:%%M') UTC "
set -g status-right " #[fg=colour12,bright]%m/%d/%Y %H:%M CST"


# Make the pane divider of the current pane really noticable
#  In my opinion this makes the pane TOO noticible, so I'm disabling this for
#  no
#set -g pane-border-fg color
#set -g pane-border-bg color
#set -g pane-active-border-fg color
#set -g pane-active-border-bg color
#set -g pane-border-fg green
#set -g pane-border-bg black
#set -g pane-active-border-fg white
#set -g pane-active-border-bg yellow
