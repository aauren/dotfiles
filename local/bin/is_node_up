#!/bin/bash

OPTIND=1
app_name="$(basename $0)"
app_signature="${app_name} [OPTION] IP_ADDRESS|DNS_NAME [PORT]"
usage="usage: ${app_signature}
Checks to see if a host is up. This script can either
block if it can't find the host right away, or it can act
in a non-blocking way and return a non-zero exit code
if it can't find the host

Options:
  -h,-?\t\tdisplay this help text and exit
  -n\t\tperform operation as non-blocking"

parse_args ()
{
	while getopts "h?n" opt; do
		case "${opt}" in
			h|\?) echo -e "${usage}"; exit 0;;
			n) nonblocking=true;;
		esac
	done

	shift $((OPTIND-1))
	if [[ -z ${1} ]]; then
		echo "You must specify an IP address or host to check: ${app_signature}" >> /dev/stderr
		echo "HINT: use -h for more usage information" >> /dev/stderr
		exit 1
	fi
	is_node_up_host="${1}"
	is_node_up_port="${2}"
}

parse_args "$@"

# Attempt to resolve the IP address of the host and use that instead of a hostname
is_node_up_status=1
while : ; do
	is_node_up_ping_results=$(ping -c 2 ${is_node_up_host} 2>&1)
	if [[ ${?} == 0 ]]; then
		echo "${is_node_up_host} is pingable"
		is_node_up_status=0
		break
	else
		if [[ ${is_node_up_host} == *"Operation not permitted"* ]]; then
			break
		fi
	fi
	echo "${is_node_up_host} does not appear to be up"
	[[ ${nonblocking} ]] && break
	sleep 15
done

# Since we can really only do this check if there is a port available
if [[ ! -z ${is_node_up_port} ]]; then
	while : ; do
		~/bin/nc -vzw 5 ${is_node_up_host} ${is_node_up_port} && is_node_up_status=0 && break
		echo "${is_node_up_host} does not appear to be listening to port ${is_node_up_port}"
		[[ ${nonblocking} ]] && is_node_up_status=1 && break
		sleep 15
	done
fi

exit ${is_node_up_status}
